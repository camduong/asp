@model Vacation.Models.Tour

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="right_col" role="main">
    <div class="row">
        <div class="col-md-12">
            <form action="~/Tours/Edit" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                <h3>Sửa chuyến đi</h3>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label>Tên chuyến đi</label>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "name", @onkeyup = "ChangeToSlug()" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Slug</label>
                            @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control", @id = "slug", @readonly = true } })
                            @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-6">
                                    <label>Giá</label>
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6">
                                    <label>Số vé</label>
                                    @Html.EditorFor(model => model.NumberTicket, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NumberTicket, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label>Hành trình</label>
                            <div class="input-daterange input-group">
                                @Html.EditorFor(model => model.Depart_Date, new { htmlAttributes = new { @class = "col-md-4 form-control" } })
                                @Html.ValidationMessageFor(model => model.Depart_Date, "", new { @class = "text-danger" })
                                <span class="input-to input-group-addon">đến</span>
                                @Html.EditorFor(model => model.Return_Date, new { htmlAttributes = new { @class = "col-md-4 form-control" } })
                                @Html.ValidationMessageFor(model => model.Return_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.DisplayNameFor(model => model.Day)
                            @Html.EditorFor(model => model.Day, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Địa điểm</label>
                            @Html.DropDownList("Location_ID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Location_ID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Chi tiết chuyến đi</label>
                            @Html.TextAreaFor(model => model.Schedule)
                        </div>
                    </div>
                </div>
                <div class="pull-right">
                    <input type='submit' class='btn btn-next btn-fill btn-warning btn-wd btn-sm' name='finish' value='Hoàn tất' />
                </div>
                <div class="clearfix"></div>
            </form>
        </div>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Content/assets/js/jquery.bootstrap.wizard.js"></script>
<script src="~/Content/assets/js/gsdk-bootstrap-wizard.js"></script>
<script src="~/Content/ckeditor/ckeditor.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/datepicker.min.js"></script>

<script>
    var editor = CKEDITOR.instances['Schedule'];
    if (editor) { editor.destroy(true); }
    CKEDITOR.replace('Schedule', {
        enterMode: CKEDITOR.ENTER_BR,
    });

    $('.datepicker.input-daterange').datepicker({
        format: "dd-mm-yyyy",
        startDate: "-infinity",
        endDate: "+7m,+4d",
        maxViewMode: 1,
        todayBtn: "linked",
        todayHighlight: true
    });

    function ChangeToSlug() {
        var title, slug;
        //Lấy text từ thẻ input title
        title = document.getElementById("name").value;
        //Đổi chữ hoa thành chữ thường
        slug = title.toLowerCase();
        //Đổi ký tự có dấu thành không dấu
        slug = slug.replace(/á|à|ả|ạ|ã|ă|ắ|ằ|ẳ|ẵ|ặ|â|ấ|ầ|ẩ|ẫ|ậ/gi, 'a');
        slug = slug.replace(/é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ/gi, 'e');
        slug = slug.replace(/i|í|ì|ỉ|ĩ|ị/gi, 'i');
        slug = slug.replace(/ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ/gi, 'o');
        slug = slug.replace(/ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự/gi, 'u');
        slug = slug.replace(/ý|ỳ|ỷ|ỹ|ỵ/gi, 'y');
        slug = slug.replace(/đ/gi, 'd');
        //Xóa các ký tự đặt biệt
        slug = slug.replace(/\`|\~|\!|\@@|\#|\||\$|\%|\^|\&|\*|\(|\)|\+|\=|\,|\.|\/|\?|\>|\<|\'|\"|\:|\;|_|\[|\]|\{|\}|\\|\//gi, '');
        //Đổi khoảng trắng thành ký tự gạch ngang
        slug = slug.replace(/ /gi, "-");
        //Đổi nhiều ký tự gạch ngang liên tiếp thành 1 ký tự gạch ngang
        //Phòng trường hợp người nhập vào quá nhiều ký tự trắng
        slug = slug.replace(/\-\-\-\-\-/gi, '-');
        slug = slug.replace(/\-\-\-\-/gi, '-');
        slug = slug.replace(/\-\-\-/gi, '-');
        slug = slug.replace(/\-\-/gi, '-');
        //Xóa các ký tự gạch ngang ở đầu và cuối
        slug = ' ' + slug + ' ';
        slug = slug.replace(/\ \-|\-\ |\ /gi, '');
        //In slug ra textbox có id “slug”
        document.getElementById('slug').value = slug;
    }
</script>